pipeline {
    agent any

    stages {
        stage('4595427U-OP-S1') {
            steps {
				script {
                    // check if 'uatsvr_image' exists and return id of the container if uatsvr_image exist
                    def existingImage = sh(
                        script: "docker images -q uatsvr_image",
                        returnStdout: true
                    ).trim()
					// remove existing uatsvr_image
                    if (existingImage) {
					echo 'removing existing image...'
                        sh "docker rmi -f uatsvr_image"
                    }
                    sh "docker commit 4595427u_uatsvr uatsvr_image"
					
					sh '''#!/bin/bash
						mkdir -p /tmp/4595427u
						puppet resource file /tmp/4595427u/research ensure=absent force=true;
						puppet resource file /tmp/4595427u/research ensure=directory;
						cd /tmp/4595427u/research;
						git clone https://github.com/chinteck847/4595427u_op_repo.git;
						targets=4595427u_uatsvr.localdomain;
						locate_script='/tmp/4595427u/research/4595427u_op_repo/4595427u_script';
						bolt script run $locate_script -t $targets -u clientadm -p pass123 --no-host-key-check --run-as root;
					'''
                }
			
                echo 'uat web server is backup and updated'
				
				
            }
        }
        stage('4595427U-OP-S2') {
            steps {
				script 
				{
				sh "curl -Is http://localhost:32500 | head -n 1 > /tmp/uatsvr-result-file"
				def result = sh(script: "awk '{print $2}' /tmp/uatsvr-result-file", returnStdout: true).trim()
				if (result == "200") 
				{
					echo "4595427u_OP_S2: uat svr is running"
				} 
				else {
					echo "4595427u_OP_S2: uat svr fails"
					}
				}
            }
        }
        stage('4595427U-OP-S3') {
            steps {
				script {
					echo "4595427u_OP_S3: Proceed stress test uat web server?"
					def userChoice = input(
						id: 'UserInput', message: 'Proceed with stress test on uat web server?',
						parameters: [
							choice(
								name: 'Decision',
								choices: "Proceed with stress test on uat web server\nAbort",
							)
						]
					)

					if (userChoice == "Abort") {
						echo "User selected Abort. Aborting subsequent stages."
						currentBuild.result = 'ABORTED'
						error("Aborted by user.")
					} else {
						echo "User selected to proceed with stress test on uat web server."
					}
				}
			}
        }
        stage('4595427U-OP-S4') {
            steps {
                echo 'Stage 4'
            }
        }
        stage('4595427U-OP-S5') {
            steps {
                echo 'Stage 5'
            }
        }
        stage('4595427U-OP-S6') {
            steps {
                echo 'Stage 6'
            }
        }
        stage('4595427U-OP-S7') {
            steps {
                echo 'Stage 7'
            }
        }
    }
}
